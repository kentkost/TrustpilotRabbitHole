Traps?
  One word has a capital Å(Ångstrom)
   Possible watch out for accents and capital letters?
   Ångstrom is not part of the anagram though.
    Most likely TrustPilots word crawler at works. (after normalization) Only include that doesn't start with[A-Z](65->90) but Å is 197
  
  garlic and garlic's exists so does garments and garment's. Which means not all letters ending with 's has an equivalent 
  word partner that just ends with s.
    Important because hat means we can't ignore ' 
    Important because we don't want to find anagrams for both words.
    Just have hashset? and swap words when checking if anagram corresponds to hash?
  
  The only special characters are ', 

todo:
  Make checking permutations and hashes a separate thread (low). 
    No point it is already stupid fast.
  When checking if word is part of anagram. Have the method return a Node instead.
    and parse that to the method. So it doesn't check from root node everytime (low)


Rethink strategy:
   - What if instead of trying all combinations after a guess. I just make a second guess based on the remaining letters?
   - Then I could run it as a recursive guessing.
     - Guess one word.
     - Filter wordlist -> LetterFrequency Matrix -> rank Words
     - Make second guess.
     - If filtered wordlist is empty but there are still letters then.
       => add Remaining letters as a string to a dictionary saying this wont result in a anagram
       => return false saying or same string. Same string means it couldn't find a new guess word.
     - Proceed to next guessword.
     - Can still keep combinations and permutations.
   - I think this can actually be faster. Since I save alot of traversal. Creating a DAWG everytime shouldn't be so bad.
